package net.trajano.app.it;

import static org.junit.Assert.assertEquals;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

import net.trajano.app.PersistedBean;
import net.trajano.app.PersistedBeans;

import org.apache.derby.jdbc.EmbeddedDriver;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

/**
 * This is an integration test to test the {@link PersistedBeans} class. This
 * uses an embedded Derby database and EclipseLink to test the bean. This is
 * useful for debugging SQLs that are generated by JPA.
 * 
 * @author Archimedes Trajano
 * 
 */
public class PersistedBeansIT {
	/**
	 * Creates the entity manager.
	 */
	@Before
	public void createEntityManager() {
		final Map<String, String> props = new HashMap<>();
		props.put("javax.persistence.jdbc.driver",
				EmbeddedDriver.class.getName());
		props.put("javax.persistence.jdbc.url",
				"jdbc:derby:target/derbyDB;create=true");
		props.put("javax.persistence.schema-generation.database.action",
				"create");
		final EntityManagerFactory emf = Persistence
				.createEntityManagerFactory("default", props);
		em = emf.createEntityManager();
	}

	private EntityManager em;

	@After
	public void closeEntityManager() {
		em.close();
	}

	@Test
	public void testBean() {
		final PersistedBeans persistedBeans = new PersistedBeans();
		persistedBeans.setEntityManager(em);
		{
			em.getTransaction().begin();
			PersistedBean bean = new PersistedBean();
			bean.setMessage("This is a message");
			bean.setSomeDate(new Date());
			bean.setSomeTime(new Date());
			bean.setSomeTimestamp(new Date());
			persistedBeans.save(bean);
			em.getTransaction().commit();
		}
		{
			em.getTransaction().begin();
			PersistedBean bean = persistedBeans.getLatest();
			assertEquals("This is a message", bean.getMessage());
			em.getTransaction().commit();
		}
	}
}
